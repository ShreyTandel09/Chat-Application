services:
  postgres:
    container_name: chat-app
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-chat_app}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${PG_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./back-end/chat-app-nestjs
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./back-end/chat-app-nestjs/.env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=${DB_DATABASE:-chat_app}
    ports:
      - "${BACKEND_PORT:-3000}:3000"

  frontend:
    build:
      context: ./front-end/chat-website
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    env_file:
      - ./front-end/chat-website/.env
    environment:
      - REACT_APP_API_URL=${FRONTEND_API_URL:-http://localhost:3000}
    ports:
      - "${FRONTEND_PORT:-80}:80"

volumes:
  postgres_data:
